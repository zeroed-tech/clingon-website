{"version":3,"file":"intl-io.umd.js","sources":["../src/NumberCulture.js","../src/DateTimeCulture.js"],"sourcesContent":["export class NumberCulture {\r\n    constructor(cultures) {\r\n        this.cultures = cultures;\r\n    }\r\n\r\n    load() {\r\n        let numberFormat = new Intl.NumberFormat(this.cultures);\r\n        let text = numberFormat.format('0.1');\r\n        this.decimalSeparator = text[1];\r\n        this.decimalSepRegex = new RegExp('\\\\' + this.decimalSeparator, 'g');\r\n    }\r\n\r\n    parse(text) {\r\n        if (typeof text != 'string' || !text) return null;\r\n\r\n        if (!this.decimalSeparator) this.load();\r\n\r\n        let clean = '';\r\n        for (let i = 0; i < text.length; i++)\r\n            if (\r\n                text[i] == this.decimalSeparator ||\r\n                (text[i] >= '0' && text[i] <= '9') ||\r\n                text[i] == '-'\r\n            )\r\n                clean += text[i];\r\n\r\n        let en = clean.replace(this.decimalSepRegex, '.');\r\n        return parseFloat(en);\r\n    }\r\n\r\n    format(number, options) {\r\n        return this.getFormatter(options).format(number);\r\n    }\r\n\r\n    getFormatter(options) {\r\n        return new Intl.NumberFormat(this.cultures, options);\r\n    }\r\n}\r\n","export const weekdayFormats = ['narrow', 'short', 'long'];\r\nexport const monthFormats = ['narrow', 'short', 'long'];\r\n\r\nconst defaultOptions = {\r\n    useCurrentDateForDefaults: false,\r\n    loose: false,\r\n};\r\n\r\nexport class DateTimeCulture {\r\n    constructor(cultures) {\r\n        this.cultures = cultures;\r\n    }\r\n\r\n    format(date, options) {\r\n        return this.getFormatter(options).format(date);\r\n    }\r\n\r\n    getFormatter(options) {\r\n        return new Intl.DateTimeFormat(this.cultures, parseOptions(options));\r\n    }\r\n\r\n    getWeekdayNames(fmt) {\r\n        this.load();\r\n        return this.weekdayNames.map(x => x[fmt]);\r\n    }\r\n\r\n    getMonthNames(fmt) {\r\n        this.load();\r\n        return this.monthNames.map(x => x[fmt]);\r\n    }\r\n\r\n    parse(text, { useCurrentDateForDefaults, loose } = defaultOptions) {\r\n        if (typeof text !== 'string' || !text) return null;\r\n\r\n        this.load();\r\n\r\n        let { date, time } = splitDateAndTime(strip8206(text));\r\n\r\n        let dateParts = extractParts(date);\r\n\r\n        let result = {\r\n            year: undefined,\r\n            month: undefined,\r\n            date: undefined,\r\n            hour: 0,\r\n            minute: 0,\r\n            second: 0,\r\n        };\r\n\r\n        let unmatchedPart = false;\r\n\r\n        dateParts.alphas.forEach(value => {\r\n            for (let i = 0; i < 12; i++)\r\n                for (let fmt in this.monthNames[i])\r\n                    if (value === this.monthNames[i][fmt].toLowerCase()) {\r\n                        result.month = i + 1;\r\n                        return;\r\n                    }\r\n            unmatchedPart = true;\r\n        });\r\n\r\n        dateParts.numbers.forEach(value => {\r\n            if (value > 31) result.year = value;\r\n            else if (value > 12) result.date = value;\r\n            else {\r\n                for (let dp = 0; dp < this.dateParts.length; dp++) {\r\n                    let name = this.dateParts[dp];\r\n                    if (result[name] === undefined) {\r\n                        result[name] = value;\r\n                        return;\r\n                    }\r\n                }\r\n                unmatchedPart = true;\r\n            }\r\n        });\r\n\r\n        if (unmatchedPart && !loose) return NaN;\r\n\r\n        if (useCurrentDateForDefaults) {\r\n            if (result.date === undefined)\r\n                if (result.month === undefined) result.date = new Date().getDate();\r\n                else result.date = 1;\r\n\r\n            if (result.month === undefined)\r\n                if (result.year === undefined) result.month = new Date().getMonth() + 1;\r\n                else result.month = 1;\r\n\r\n            if (result.year === undefined) result.year = new Date().getFullYear();\r\n        }\r\n\r\n        let timeComponent = ['hour', 'minute', 'second'];\r\n        let timeParts = extractParts(time);\r\n        for (let i = 0; i < Math.min(timeParts.numbers.length, timeComponent.length); i++)\r\n            result[timeComponent[i]] = timeParts.numbers[i];\r\n\r\n        timeParts.alphas.forEach(x => {\r\n            if (x.toLowerCase() === 'pm' && result.hour > 0 && result.hour < 12) result.hour += 12;\r\n            if (x.toLowerCase() === 'am' && result.hour === 12) result.hour = 0;\r\n        });\r\n\r\n        if (result.date >= 1 && result.date <= 31 && result.month >= 1 && result.month <= 12)\r\n            return new Date(\r\n                result.year,\r\n                result.month - 1,\r\n                result.date,\r\n                result.hour,\r\n                result.minute,\r\n                result.second,\r\n            );\r\n\r\n        return Number.NaN;\r\n    }\r\n\r\n    load() {\r\n        if (this.loaded) return;\r\n\r\n        let i;\r\n\r\n        let monthNames = [];\r\n        for (let m = 0; m < 12; m++) monthNames.push({});\r\n\r\n        monthFormats.forEach(monthFormat => {\r\n            let dateFormat = new Intl.DateTimeFormat(this.cultures, { month: monthFormat });\r\n            for (i = 0; i < 12; i++) {\r\n                monthNames[i][monthFormat] = strip8206(\r\n                    dateFormat.format(new Date(2000, i, 15)),\r\n                ).replace('.', '');\r\n            }\r\n        });\r\n\r\n        this.monthNames = monthNames;\r\n\r\n        let weekdayNames = [];\r\n        for (i = 0; i < 7; i++) weekdayNames.push({});\r\n\r\n        weekdayFormats.forEach(weekdayFormat => {\r\n            let dateFormat = new Intl.DateTimeFormat(this.cultures, { weekday: weekdayFormat });\r\n            for (i = 0; i < 7; i++) {\r\n                let date = new Date(2000, 0, i, 12, 0, 0);\r\n                weekdayNames[date.getDay()][weekdayFormat] = strip8206(\r\n                    dateFormat.format(date),\r\n                ).replace('.', '');\r\n            }\r\n        });\r\n\r\n        this.weekdayNames = weekdayNames;\r\n\r\n        let testDate = new Date(2077, 10, 22);\r\n        let localeDate = new Intl.DateTimeFormat(this.cultures).format(testDate);\r\n        let localeDateFmt = localeDate\r\n            .replace(2077, 'year')\r\n            .replace(11, 'month')\r\n            .replace(22, 'date');\r\n\r\n        this.dateParts = extractParts(localeDateFmt).alphas;\r\n        this.loaded = true;\r\n    }\r\n}\r\n\r\nfunction parseOptions(fmt) {\r\n    if (typeof fmt !== 'string') return fmt;\r\n\r\n    let count = {\r\n        Y: 0, //year\r\n        y: 0, //year\r\n        M: 0, //months\r\n        D: 0, //day name\r\n        d: 0, //day\r\n        H: 0, //hours\r\n        h: 0, //hours\r\n        m: 0, //minutes\r\n        i: 0, //minutes,\r\n        S: 0, //seconds\r\n        s: 0, //seconds\r\n        A: 0, //hour12 AM/PM\r\n        a: 0, //hour12 AM/PM\r\n        P: 0, //hour12 AM/PM\r\n        p: 0, //hour12 AM/PM\r\n        N: 0, //hour24\r\n        n: 0, //hour24\r\n        T: 0, //timezone\r\n        t: 0, //timezone\r\n        U: 0, //timezone\r\n        u: 0, //timezone\r\n        Z: 0, //timezone\r\n        z: 0, //timezone\r\n    };\r\n\r\n    for (let i = 0; i < fmt.length; i++) count[fmt[i]]++;\r\n\r\n    let options = {};\r\n\r\n    let year = count.Y + count.y;\r\n    if (year > 2) options.year = 'numeric';\r\n    else if (year > 0) options.year = '2-digit';\r\n\r\n    let month = count.M;\r\n    if (month > 3) options.month = 'long';\r\n    else if (month > 2) options.month = 'short';\r\n    else if (month > 1) options.month = '2-digit';\r\n    else if (month > 0) options.month = 'numeric';\r\n\r\n    let day = count.d;\r\n    if (day > 1) options.day = '2-digit';\r\n    else if (day > 0) options.day = 'numeric';\r\n\r\n    let weekday = count.D;\r\n    if (weekday > 3) options.weekday = 'long';\r\n    else if (weekday > 1) options.weekday = 'short';\r\n    else if (weekday > 0) options.weekday = 'narrow';\r\n\r\n    let hours = count.H + count.h;\r\n    if (hours > 1) options.hour = '2-digit';\r\n    else if (hours > 0) options.hour = 'numeric';\r\n\r\n    let minute = count.m;\r\n    if (minute > 1) options.minute = '2-digit';\r\n    else if (minute > 0) options.minute = 'numeric';\r\n\r\n    let second = count.S + count.s;\r\n    if (second > 1) options.second = '2-digit';\r\n    else if (second > 0) options.second = 'numeric';\r\n\r\n    let timeZoneName = count.T + count.t;\r\n    if (timeZoneName > 3) options.timeZoneName = 'long';\r\n    else if (timeZoneName > 0) options.timeZoneName = 'short';\r\n\r\n    let hour12 = count.A + count.a + count.P + count.p;\r\n    if (hour12) options.hour12 = true;\r\n\r\n    let noctis = count.N + count.n;\r\n    if (noctis) options.hour12 = false;\r\n\r\n    let utc = count.U + count.u + count.Z + count.z;\r\n    if (utc > 0) options.timeZone = 'UTC';\r\n\r\n    return options;\r\n}\r\n\r\nfunction splitDateAndTime(text) {\r\n    let split = text.indexOf(':');\r\n    if (split === -1)\r\n        return {\r\n            date: text,\r\n            time: '',\r\n        };\r\n\r\n    while (split > 0 && text[split - 1] >= '0' && text[split - 1] <= '9') split--;\r\n\r\n    return {\r\n        date: text.substring(0, split),\r\n        time: text.substring(split),\r\n    };\r\n}\r\n\r\nfunction extractParts(text) {\r\n    let numbers = [];\r\n    let alphas = [];\r\n\r\n    let mode = '',\r\n        newMode,\r\n        c,\r\n        start = 0,\r\n        part;\r\n\r\n    for (let i = 0; i <= text.length; i++) {\r\n        if (i === text.length) newMode = 'end';\r\n        else {\r\n            c = text[i];\r\n            if (c.match(/[a-z]/i)) newMode = 'alpha';\r\n            else if (c.match(/[0-9]/)) newMode = 'number';\r\n            else newMode = 'sep';\r\n        }\r\n\r\n        if (newMode === mode) continue;\r\n\r\n        if (i > start) {\r\n            part = text.substring(start, i);\r\n            if (mode === 'alpha') alphas.push(part.toLowerCase());\r\n            else if (mode === 'number') numbers.push(parseInt(part));\r\n        }\r\n\r\n        start = i;\r\n        mode = newMode;\r\n    }\r\n\r\n    return {\r\n        alphas,\r\n        numbers,\r\n    };\r\n}\r\n\r\n//https://www.csgpro.com/blog/2016/08/a-bad-date-with-internet-explorer-11-trouble-with-new-unicode-characters-in-javascript-date-strings\r\nfunction strip8206(str) {\r\n    return str.replace(/\\u200E/g, '');\r\n}\r\n"],"names":["NumberCulture","cultures","load","numberFormat","Intl","NumberFormat","text","format","decimalSeparator","decimalSepRegex","RegExp","parse","clean","i","length","en","replace","parseFloat","number","options","getFormatter","weekdayFormats","monthFormats","defaultOptions","useCurrentDateForDefaults","loose","DateTimeCulture","date","DateTimeFormat","parseOptions","getWeekdayNames","fmt","weekdayNames","map","x","getMonthNames","monthNames","splitDateAndTime","strip8206","time","dateParts","extractParts","result","year","undefined","month","hour","minute","second","unmatchedPart","alphas","forEach","value","toLowerCase","numbers","dp","name","NaN","Date","getDate","getMonth","getFullYear","timeComponent","timeParts","Math","min","Number","loaded","m","push","monthFormat","dateFormat","weekdayFormat","weekday","getDay","testDate","localeDate","localeDateFmt","count","Y","y","M","D","d","H","h","S","s","A","a","P","p","N","n","T","t","U","u","Z","z","day","hours","timeZoneName","hour12","noctis","utc","timeZone","split","indexOf","substring","mode","newMode","c","start","part","match","parseInt","str"],"mappings":"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"}