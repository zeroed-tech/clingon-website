{"ast":null,"code":"import _slicedToArray from\"/home/justice/Development/clingon-website/clingon/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{store_products}from'../../Assets/data';import StoreProductDisplay from'../StoreProductDisplay';import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Col from'react-bootstrap/Col';import Cart from'../Cart';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Store(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),order=_useState2[0],setOrder=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),orderSubtotal=_useState4[0],setOrderSubtotal=_useState4[1];var reducer=function reducer(){var num=0;if(order.length>0){order.forEach(function(each){num+=each.price*each.amount;});setOrderSubtotal(num.toFixed(2));}else{setOrderSubtotal(0);}};var updateOrder=function updateOrder(newItem){order=removeDuplicates(newItem);reducer();setOrder(order);};var removeDuplicates=function removeDuplicates(objectToInsert){if(order.find(function(match){return match.id==objectToInsert.id;})){order.forEach(function(item,index){if(item.id==objectToInsert.id){if(objectToInsert.amount>=0){return order[index]=objectToInsert;}else{return order.splice(index,1);}}});}else{order.push(objectToInsert);}return order;};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{lg:{span:8},children:store_products.map(function(product){return/*#__PURE__*/_jsx(StoreProductDisplay,{id:product['id'],name:product['name'],price:product['price'],RRP:product['RRP'],removeDuplicates:removeDuplicates,updateOrder:updateOrder});})}),/*#__PURE__*/_jsx(Col,{lg:{span:4},style:{backgroundColor:'white'},children:/*#__PURE__*/_jsx(Cart,{orderedItems:order,orderSubtotal:orderSubtotal})})]})});}","map":{"version":3,"sources":["/home/justice/Development/clingon-website/clingon/src/components/pages/Store.js"],"names":["React","useState","useEffect","store_products","StoreProductDisplay","Container","Row","Col","Cart","Store","order","setOrder","orderSubtotal","setOrderSubtotal","reducer","num","length","forEach","each","price","amount","toFixed","updateOrder","newItem","removeDuplicates","objectToInsert","find","match","id","item","index","splice","push","span","map","product","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { store_products } from '../../Assets/data'\nimport StoreProductDisplay from '../StoreProductDisplay'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Cart from '../Cart'\n\nexport default function Store() {\n    let [order, setOrder] = useState([])\n    let [orderSubtotal, setOrderSubtotal] = useState(0)\n\n    let reducer = () => {\n        let num = 0\n        if (order.length > 0) {\n\n        \n        order.forEach(each => {\n            num += (each.price * each.amount)\n        })\n        setOrderSubtotal(num.toFixed(2))\n    } else {\n        setOrderSubtotal(0)\n    }\n    }\n    let updateOrder = (newItem) => {\n\n        order = removeDuplicates(newItem)\n        reducer()\n        \n        setOrder(order)\n\n    }\n    let removeDuplicates = (objectToInsert) => {\n        if (order.find(match => match.id == objectToInsert.id)) {\n            order.forEach((item, index) => {\n                if (item.id == objectToInsert.id) {\n\n                    if (objectToInsert.amount >= 0) {\n                        return order[index] = objectToInsert\n\n                    } else {\n                       return order.splice(index, 1)\n                    }\n                }\n            })\n        } else {\n            order.push(objectToInsert)\n        }\n        \n        return order\n    }\n    \n    return (\n        <Container>\n            <Row>\n                <Col lg={{ span: 8 }}>\n                    {store_products.map((product) => {\n                        return <StoreProductDisplay id={product['id']} name={product['name']} price={product['price']} RRP={product['RRP']} removeDuplicates={removeDuplicates} updateOrder={updateOrder} />\n                    })}\n                </Col>\n                <Col lg={{ span: 4 }} style={{ backgroundColor: 'white' }}>\n                    <Cart orderedItems={order} orderSubtotal={orderSubtotal}/>\n                </Col>\n\n            </Row>\n        </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}