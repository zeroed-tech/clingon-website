{"ast":null,"code":"var _jsxFileName = \"/home/justice/Development/clingon-website/clingon/src/components/StoreProductDisplay.js\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StoreProductDisplay(_ref) {\n  let {\n    stockData\n  } = _ref;\n  let tempWidth = window.innerWidth > 520 ? '15rem' : '45vw';\n  console.log(stockData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'inline-block'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = StoreProductDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProductDisplay\");","map":{"version":3,"sources":["/home/justice/Development/clingon-website/clingon/src/components/StoreProductDisplay.js"],"names":["React","Card","Button","StoreProductDisplay","stockData","tempWidth","window","innerWidth","console","log","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AACA,eAAe,SAASC,mBAAT,OAA0C;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AACrD,MAAIC,SAAS,GAAGC,MAAM,CAACC,UAAP,GAAoB,GAApB,GAA0B,OAA1B,GAAoC,MAApD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACM,MAAAA,OAAO,EAAE;AAAV;AAAZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;KAnBuBP,mB","sourcesContent":["import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nexport default function StoreProductDisplay({stockData}) {\n    let tempWidth = window.innerWidth > 520 ? '15rem' : '45vw';\n    console.log(stockData)\n    return (\n        <div style={{display: 'inline-block'}}>\n            {/* <Card style={{ width: tempWidth }}>\n                <Card.Body>\n                    <Card.Title>{name}</Card.Title>\n                    <Card.Text style={{textAlign:'left'}}><b>Price: </b>${price.toFixed(2)}</Card.Text>\n                    <Card.Text style={{textAlign:'left'}}><b>RRP: </b>${RRP.toFixed(2)}</Card.Text>\n                    <input onChange={(e) => {\n                        let amount = parseInt(e.target.value)\n                        updateOrder({name, price, RRP, id, amount})\n                    }} type='text' style={{width: '30%'}} placeholder='Qty'/>\n                </Card.Body>\n            </Card> */}\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}