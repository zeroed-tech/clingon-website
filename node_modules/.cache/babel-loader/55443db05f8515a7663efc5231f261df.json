{"ast":null,"code":"var _jsxFileName = \"/home/justice/Development/clingon-website/clingon/src/components/StoreProductDisplay.js\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StoreProductDisplay(_ref) {\n  let {\n    id,\n    name,\n    price,\n    RRP,\n    updateOrder,\n    removeDuplicates\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'inline-block'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"$\", price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"$\", RRP.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            let amount = parseInt(e.target.value);\n            updateOrder({\n              name,\n              price,\n              RRP,\n              id,\n              amount\n            });\n          },\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = StoreProductDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProductDisplay\");","map":{"version":3,"sources":["/home/justice/Development/clingon-website/clingon/src/components/StoreProductDisplay.js"],"names":["React","Card","Button","StoreProductDisplay","id","name","price","RRP","updateOrder","removeDuplicates","display","width","toFixed","e","amount","parseInt","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AACA,eAAe,SAASC,mBAAT,OAAqF;AAAA,MAAxD;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,GAAnB;AAAwBC,IAAAA,WAAxB;AAAqCC,IAAAA;AAArC,GAAwD;AAEhG,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA,6BACI,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaN;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,0BAAaC,KAAK,CAACM,OAAN,CAAc,CAAd,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAA,0BAAaL,GAAG,CAACK,OAAJ,CAAY,CAAZ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAO,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACpB,gBAAIC,MAAM,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAArB;AACAT,YAAAA,WAAW,CAAC;AAACH,cAAAA,IAAD;AAAOC,cAAAA,KAAP;AAAcC,cAAAA,GAAd;AAAmBH,cAAAA,EAAnB;AAAuBU,cAAAA;AAAvB,aAAD,CAAX;AACH,WAHD;AAGG,UAAA,IAAI,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;KAlBuBX,mB","sourcesContent":["import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nexport default function StoreProductDisplay({ id, name, price, RRP, updateOrder, removeDuplicates}) {\n\n    return (\n        <div style={{display: 'inline-block'}}>\n            <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                    <Card.Title>{name}</Card.Title>\n                    <Card.Text>${price.toFixed(2)}</Card.Text>\n                    <Card.Text>${RRP.toFixed(2)}</Card.Text>\n                    <input onChange={(e) => {\n                        let amount = parseInt(e.target.value)\n                        updateOrder({name, price, RRP, id, amount})\n                    }} type='text' />\n                </Card.Body>\n            </Card>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}