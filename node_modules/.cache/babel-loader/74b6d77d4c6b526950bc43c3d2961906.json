{"ast":null,"code":"var _jsxFileName = \"/home/justice/Development/clingon-website/clingon/src/components/StoreProductDisplay.js\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StoreProductDisplay(_ref) {\n  let {\n    stockData,\n    updateOrder\n  } = _ref;\n  let tempWidth = window.innerWidth > 520 ? '15rem' : '45vw';\n  let {\n    id,\n    Series,\n    code,\n    price,\n    rrp\n  } = stockData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'inline-block'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: tempWidth\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          style: {\n            textAlign: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Price: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 59\n          }, this), \"$\", price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          style: {\n            textAlign: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"RRP: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 59\n          }, this), \"$\", rrp.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            let amount = parseInt(e.target.value);\n            updateOrder({\n              code,\n              price,\n              rrp,\n              id,\n              amount\n            });\n          },\n          type: \"text\",\n          style: {\n            width: '30%'\n          },\n          placeholder: \"Qty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = StoreProductDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProductDisplay\");","map":{"version":3,"sources":["/home/justice/Development/clingon-website/clingon/src/components/StoreProductDisplay.js"],"names":["React","Card","Button","StoreProductDisplay","stockData","updateOrder","tempWidth","window","innerWidth","id","Series","code","price","rrp","display","width","textAlign","toFixed","e","amount","parseInt","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AACA,eAAe,SAASC,mBAAT,OAAuD;AAAA,MAA1B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA0B;AAClE,MAAIC,SAAS,GAAGC,MAAM,CAACC,UAAP,GAAoB,GAApB,GAA0B,OAA1B,GAAoC,MAApD;AACA,MAAI;AACAC,IAAAA,EADA;AAEAC,IAAAA,MAFA;AAGAC,IAAAA,IAHA;AAIAC,IAAAA,KAJA;AAKAC,IAAAA;AALA,MAMAT,SANJ;AAOA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACU,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAET;AAAT,OAAb;AAAA,6BACI,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaK;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAE;AAACK,YAAAA,SAAS,EAAC;AAAX,WAAlB;AAAA,kCAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtC,OAAsDJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAE;AAACD,YAAAA,SAAS,EAAC;AAAX,WAAlB;AAAA,kCAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtC,OAAoDH,GAAG,CAACI,OAAJ,CAAY,CAAZ,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAO,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACpB,gBAAIC,MAAM,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAArB;AACAjB,YAAAA,WAAW,CAAC;AAACM,cAAAA,IAAD;AAAOC,cAAAA,KAAP;AAAcC,cAAAA,GAAd;AAAmBJ,cAAAA,EAAnB;AAAuBU,cAAAA;AAAvB,aAAD,CAAX;AACH,WAHD;AAGG,UAAA,IAAI,EAAC,MAHR;AAGe,UAAA,KAAK,EAAE;AAACJ,YAAAA,KAAK,EAAE;AAAR,WAHtB;AAGsC,UAAA,WAAW,EAAC;AAHlD;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;KAzBuBZ,mB","sourcesContent":["import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nexport default function StoreProductDisplay({stockData, updateOrder}) {\n    let tempWidth = window.innerWidth > 520 ? '15rem' : '45vw';\n    let {\n        id,\n        Series,\n        code,\n        price,\n        rrp\n    } = stockData\n    return (\n        <div style={{display: 'inline-block'}}>\n            <Card style={{ width: tempWidth }}>\n                <Card.Body>\n                    <Card.Title>{code}</Card.Title>\n                    <Card.Text style={{textAlign:'left'}}><b>Price: </b>${price.toFixed(2)}</Card.Text>\n                    <Card.Text style={{textAlign:'left'}}><b>RRP: </b>${rrp.toFixed(2)}</Card.Text>\n                    <input onChange={(e) => {\n                        let amount = parseInt(e.target.value)\n                        updateOrder({code, price, rrp, id, amount})\n                    }} type='text' style={{width: '30%'}} placeholder='Qty'/>\n                </Card.Body>\n            </Card>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}